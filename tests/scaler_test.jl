# include("../mesh/mesh_clear.jl")
using Test
using VoronoiDelaunay
using LinearAlgebra
using GeometricalPredicates

struct Scaler
    scale::Any
    transx::Any
    transy::Any

    function Scaler(bbox::Array{Int,2})
        _scale = (abs(1 / (bbox[2] - bbox[1])))
        new(
            round(_scale, digits=4),
            round((1 + (0 - bbox[1] * _scale)), digits=4),
            round((1 + (0 - bbox[1, 2] * _scale)), digits=4),
        )
    end
end

function scaled_point(unscaled_point::Point2D, scaler::Scaler)
    return Point(
        round(((getx(unscaled_point) * scaler.scale) + scaler.transx), digits=4),
        round(((gety(unscaled_point) * scaler.scale) + scaler.transy), digits=4)
    )
end

function unscaled_point(scaled_point::Point2D, scaler::Scaler)
    return Point(
        round((getx(scaled_point) - scaler.transx) / scaler.scale, digits=4),
        round((gety(scaled_point) - scaler.transy) / scaler.scale, digits=4)
    )
end

bbox = [-1 -1; 1 1]
@info "Boundy box = " bbox
@info "x1 = " bbox[1]
@info "y1 = " bbox[2]

_scale = (abs(1 / (bbox[1] - bbox[2])))

@info "Scale = " _scale
@info "Trans x = " round((1 + (0 - bbox[1] * _scale)), digits=4)
@info "Trans y = " round((1 + (0 - bbox[1, 2] * _scale)), digits=4)

scaler = Scaler(bbox)

@testset "Proper scale" begin
    expected_scale = 1 / (1 - (-1))
    @test expected_scale == scaler.scale
end


@testset "Scale then unscale point" begin
    p = Point(-1, -1)
    sp = Point(1, 1)
    spt = scaled_point(p, scaler)
    @test sp == spt
    uspt = unscaled_point(spt, scaler)
    @test p == uspt 
end

#@testset "Scale unscale points" begin
#    p = Point(-0.3213)
#end

#usps = [Point2D(-0.9, -0.1339745962155614), Point2D(-0.9, 0.21243556529821417), Point2D(-0.7000000000000001, -0.48038475772933675), Point2D(-0.8, -0.3071796769724491), Point2D(-0.7000000000000001, -0.1339745962155614), Point2D(-0.8, 0.039230484541326494), Point2D(-0.7000000000000001, 0.21243556529821417), Point2D(-0.8, 0.38564064605510184), Point2D(-0.7000000000000001, 0.5588457268119895), Point2D(-0.5, -0.8267949192431123), Point2D(-0.6, -0.6535898384862245), Point2D(-0.5, -0.48038475772933675), Point2D(-0.6, -0.3071796769724491), Point2D(-0.5, -0.1339745962155614), Point2D(-0.6, 0.039230484541326494), Point2D(-0.5, 0.21243556529821417), Point2D(-0.6, 0.38564064605510184), Point2D(-0.5, 0.5588457268119895), Point2D(-0.6, 0.7320508075688772), Point2D(-0.30000000000000004, -0.8267949192431123), Point2D(-0.4, -0.6535898384862245), Point2D(-0.30000000000000004, -0.48038475772933675), Point2D(-0.4, -0.3071796769724491), Point2D(-0.30000000000000004, -0.1339745962155614), Point2D(-0.4, 0.039230484541326494), Point2D(-0.30000000000000004, 0.21243556529821417), Point2D(-0.4, 0.38564064605510184), Point2D(-0.30000000000000004, 0.5588457268119895), Point2D(-0.4, 0.7320508075688772), Point2D(-0.30000000000000004, 0.9052558883257651), Point2D(-0.1, -0.8267949192431123), Point2D(-0.2, -0.6535898384862245), Point2D(-0.1, -0.48038475772933675), Point2D(-0.2, -0.3071796769724491), Point2D(-0.1, -0.1339745962155614), Point2D(-0.2, 0.039230484541326494), Point2D(-0.1, 0.21243556529821417), Point2D(-0.2, 0.38564064605510184), Point2D(-0.1, 0.5588457268119895), Point2D(-0.2, 0.7320508075688772), Point2D(-0.1, 0.9052558883257651), Point2D(0.0, -1.0), Point2D(0.1, -0.8267949192431123), Point2D(0.0, -0.6535898384862245), Point2D(0.1, -0.48038475772933675), Point2D(0.0, -0.3071796769724491), Point2D(0.1, -0.1339745962155614), Point2D(0.0, 0.039230484541326494), Point2D(0.1, 0.21243556529821417), Point2D(0.0, 0.38564064605510184), Point2D(0.1, 0.5588457268119895), Point2D(0.0, 0.7320508075688772), Point2D(0.1, 0.9052558883257651), Point2D(0.30000000000000004, -0.8267949192431123), Point2D(0.2, -0.6535898384862245), Point2D(0.30000000000000004, -0.48038475772933675), Point2D(0.2, -0.3071796769724491), Point2D(0.30000000000000004, -0.1339745962155614), Point2D(0.2, 0.039230484541326494), Point2D(0.30000000000000004, 0.21243556529821417), Point2D(0.2, 0.38564064605510184), Point2D(0.30000000000000004, 0.5588457268119895), Point2D(0.2, 0.7320508075688772), Point2D(0.30000000000000004, 0.9052558883257651), Point2D(0.5, -0.8267949192431123), Point2D(0.4, -0.6535898384862245), Point2D(0.5, -0.48038475772933675), Point2D(0.4, -0.3071796769724491), Point2D(0.5, -0.1339745962155614), Point2D(0.4, 0.039230484541326494), Point2D(0.5, 0.21243556529821417), Point2D(0.4, 0.38564064605510184), Point2D(0.5, 0.5588457268119895), Point2D(0.4, 0.7320508075688772), Point2D(0.6, -0.6535898384862245), Point2D(0.7, -0.48038475772933675), Point2D(0.6, -0.3071796769724491), Point2D(0.7, -0.1339745962155614), Point2D(0.6, 0.039230484541326494), Point2D(0.7, 0.21243556529821417), Point2D(0.6, 0.38564064605510184), Point2D(0.7, 0.5588457268119895), Point2D(0.6, 0.7320508075688772), Point2D(0.8, -0.3071796769724491), Point2D(0.9, -0.1339745962155614), Point2D(0.8, 0.039230484541326494), Point2D(0.9, 0.21243556529821417), Point2D(0.8, 0.38564064605510184)]
#scps = [Point2D(1.1, 1.5196152422706632), Point2D(1.5, 1.1732050807568877), Point2D(1.8, 1.5196152422706632), Point2D(1.45, 1.4330127018922192), Point2D(1.3, 1.1732050807568877), Point2D(1.9, 1.3464101615137753), Point2D(1.35, 1.4330127018922192), Point2D(1.15, 1.606217782649107), Point2D(1.85, 1.606217782649107), Point2D(1.5, 1.692820323027551), Point2D(1.75, 1.4330127018922192), Point2D(1.75, 1.606217782649107), Point2D(1.15, 1.2598076211353315), Point2D(1.25, 1.4330127018922192), Point2D(1.85, 1.4330127018922192), Point2D(1.4, 1.692820323027551), Point2D(1.3, 1.3464101615137753), Point2D(1.8, 1.3464101615137753), Point2D(1.5, 1.5196152422706632), Point2D(1.8, 1.692820323027551), Point2D(1.9, 1.5196152422706632), Point2D(1.7, 1.8660254037844386), Point2D(1.8, 1.8660254037844386), Point2D(1.65, 1.7794228634059948), Point2D(1.75, 1.7794228634059948), Point2D(1.85, 1.7794228634059948), Point2D(1.7, 1.692820323027551), Point2D(1.9, 1.692820323027551), Point2D(1.95, 1.606217782649107), Point2D(1.65, 1.606217782649107), Point2D(1.6, 1.692820323027551), Point2D(1.55, 1.606217782649107), Point2D(1.55, 1.7794228634059948), Point2D(1.6, 1.8660254037844386), Point2D(1.5, 1.8660254037844386), Point2D(1.45, 1.9526279441628827), Point2D(1.55, 1.9526279441628827), Point2D(1.65, 1.9526279441628827), Point2D(1.45, 1.7794228634059948), Point2D(1.4, 1.8660254037844386), Point2D(1.35, 1.9526279441628827), Point2D(1.35, 1.7794228634059948), Point2D(1.3, 1.8660254037844386), Point2D(1.15, 1.7794228634059948), Point2D(1.2, 1.8660254037844386), Point2D(1.2, 1.5196152422706632), Point2D(1.05, 1.606217782649107), Point2D(1.1, 1.692820323027551), Point2D(1.2, 1.692820323027551), Point2D(1.3, 1.5196152422706632), Point2D(1.25, 1.606217782649107), Point2D(1.25, 1.7794228634059948), Point2D(1.3, 1.692820323027551), Point2D(1.45, 1.606217782649107), Point2D(1.45, 1.2598076211353315), Point2D(1.5, 1.3464101615137753), Point2D(1.4, 1.3464101615137753), Point2D(1.4, 1.5196152422706632), Point2D(1.35, 1.606217782649107), Point2D(1.2, 1.3464101615137753), Point2D(1.15, 1.4330127018922192), Point2D(1.1, 1.3464101615137753), Point2D(1.05, 1.4330127018922192), Point2D(1.2, 1.1732050807568877), Point2D(1.25, 1.0866025403784438), Point2D(1.25, 1.2598076211353315), Point2D(1.35, 1.2598076211353315), Point2D(1.35, 1.0866025403784438), Point2D(1.4, 1.1732050807568877), Point2D(1.45, 1.0866025403784438), Point2D(1.5, 1.0), Point2D(1.6, 1.1732050807568877), Point2D(1.55, 1.0866025403784438), Point2D(1.55, 1.2598076211353315), Point2D(1.65, 1.2598076211353315), Point2D(1.6, 1.3464101615137753), Point2D(1.6, 1.5196152422706632), Point2D(1.65, 1.4330127018922192), Point2D(1.7, 1.5196152422706632), Point2D(1.95, 1.4330127018922192), Point2D(1.55, 1.4330127018922192), Point2D(1.7, 1.3464101615137753), Point2D(1.85, 1.2598076211353315), Point2D(1.8, 1.1732050807568877), Point2D(1.65, 1.0866025403784438), Point2D(1.7, 1.1732050807568877), Point2D(1.75, 1.2598076211353315), Point2D(1.75, 1.0866025403784438)]

uspts = [Point2D(-0.9, -0.1339745962155614), Point2D(-0.9, 0.21243556529821417), Point2D(-0.7000000000000001, -0.48038475772933675), Point2D(-0.8, -0.3071796769724491), Point2D(-0.7000000000000001, -0.1339745962155614), Point2D(-0.8, 0.039230484541326494), Point2D(-0.7000000000000001, 0.21243556529821417), Point2D(-0.8, 0.38564064605510184), Point2D(-0.7000000000000001, 0.5588457268119895), Point2D(-0.5, -0.8267949192431123), Point2D(-0.6, -0.6535898384862245), Point2D(-0.5, -0.48038475772933675), Point2D(-0.6, -0.3071796769724491), Point2D(-0.5, -0.1339745962155614), Point2D(-0.6, 0.039230484541326494), Point2D(-0.5, 0.21243556529821417), Point2D(-0.6, 0.38564064605510184), Point2D(-0.5, 0.5588457268119895), Point2D(-0.6, 0.7320508075688772), Point2D(-0.30000000000000004, -0.8267949192431123), Point2D(-0.4, -0.6535898384862245), Point2D(-0.30000000000000004, -0.48038475772933675), Point2D(-0.4, -0.3071796769724491), Point2D(-0.30000000000000004, -0.1339745962155614), Point2D(-0.4, 0.039230484541326494), Point2D(-0.30000000000000004, 0.21243556529821417), Point2D(-0.4, 0.38564064605510184), Point2D(-0.30000000000000004, 0.5588457268119895), Point2D(-0.4, 0.7320508075688772), Point2D(-0.30000000000000004, 0.9052558883257651), Point2D(-0.1, -0.8267949192431123), Point2D(-0.2, -0.6535898384862245), Point2D(-0.1, -0.48038475772933675), Point2D(-0.2, -0.3071796769724491), Point2D(-0.1, -0.1339745962155614), Point2D(-0.2, 0.039230484541326494), Point2D(-0.1, 0.21243556529821417), Point2D(-0.2, 0.38564064605510184), Point2D(-0.1, 0.5588457268119895), Point2D(-0.2, 0.7320508075688772), Point2D(-0.1, 0.9052558883257651), Point2D(0.0, -1.0), Point2D(0.1, -0.8267949192431123), Point2D(0.0, -0.6535898384862245), Point2D(0.1, -0.48038475772933675), Point2D(0.0, -0.3071796769724491), Point2D(0.1, -0.1339745962155614), Point2D(0.0, 0.039230484541326494), Point2D(0.1, 0.21243556529821417), Point2D(0.0, 0.38564064605510184), Point2D(0.1, 0.5588457268119895), Point2D(0.0, 0.7320508075688772), Point2D(0.1, 0.9052558883257651), Point2D(0.30000000000000004, -0.8267949192431123), Point2D(0.2, -0.6535898384862245), Point2D(0.30000000000000004, -0.48038475772933675), Point2D(0.2, -0.3071796769724491), Point2D(0.30000000000000004, -0.1339745962155614), Point2D(0.2, 0.039230484541326494), Point2D(0.30000000000000004, 0.21243556529821417), Point2D(0.2, 0.38564064605510184), Point2D(0.30000000000000004, 0.5588457268119895), Point2D(0.2, 0.7320508075688772), Point2D(0.30000000000000004, 0.9052558883257651), Point2D(0.5, -0.8267949192431123), Point2D(0.4, -0.6535898384862245), Point2D(0.5, -0.48038475772933675), Point2D(0.4, -0.3071796769724491), Point2D(0.5, -0.1339745962155614), Point2D(0.4, 0.039230484541326494), Point2D(0.5, 0.21243556529821417), Point2D(0.4, 0.38564064605510184), Point2D(0.5, 0.5588457268119895), Point2D(0.4, 0.7320508075688772), Point2D(0.6, -0.6535898384862245), Point2D(0.7, -0.48038475772933675), Point2D(0.6, -0.3071796769724491), Point2D(0.7, -0.1339745962155614), Point2D(0.6, 0.039230484541326494), Point2D(0.7, 0.21243556529821417), Point2D(0.6, 0.38564064605510184), Point2D(0.7, 0.5588457268119895), Point2D(0.6, 0.7320508075688772), Point2D(0.8, -0.3071796769724491), Point2D(0.9, -0.1339745962155614), Point2D(0.8, 0.039230484541326494), Point2D(0.9, 0.21243556529821417), Point2D(0.8, 0.38564064605510184)]
usptsn = map(p -> Point(round(getx(p), digits=6), round(gety(p), digits=6)), uspts)
spts = [Point2D(1.4375, 1.0625), Point2D(1.6875, 1.375), Point2D(1.3125, 1.1875), Point2D(1.625, 1.1875), Point2D(1.375, 1.75), Point2D(1.875, 1.25), Point2D(1.25, 1.0625), Point2D(1.75, 1.75), Point2D(1.8125, 1.875), Point2D(1.0625, 1.4375), Point2D(1.5, 1.875), Point2D(1.3125, 1.375), Point2D(1.8125, 1.1875), Point2D(1.1875, 1.6875), Point2D(1.3125, 1.6875), Point2D(1.375, 1.9375), Point2D(1.375, 1.0625), Point2D(1.375, 1.25), Point2D(1.125, 1.5), Point2D(1.125, 1.4375), Point2D(1.375, 1.875), Point2D(1.8125, 1.6875), Point2D(1.875, 1.75), Point2D(1.875, 1.6875), Point2D(1.9375, 1.625), Point2D(1.75, 1.625), Point2D(1.875, 1.625), Point2D(1.6875, 1.5), Point2D(1.8125, 1.5), Point2D(1.875, 1.5), Point2D(1.5625, 1.625), Point2D(1.625, 1.6875), Point2D(1.625, 1.625), Point2D(1.6875, 1.6875), Point2D(1.625, 1.75), Point2D(1.625, 1.9375), Point2D(1.625, 1.875), Point2D(1.6875, 1.875), Point2D(1.5625, 1.75), Point2D(1.5625, 1.9375), Point2D(1.4375, 1.9375), Point2D(1.4375, 1.75), Point2D(1.3125, 1.875), Point2D(1.25, 1.75), Point2D(1.125, 1.75), Point2D(1.0625, 1.625), Point2D(1.125, 1.625), Point2D(1.1875, 1.875), Point2D(1.125, 1.6875), Point2D(1.3125, 1.5), Point2D(1.25, 1.625), Point2D(1.5, 1.6875), Point2D(1.375, 1.6875), Point2D(1.4375, 1.625), Point2D(1.5, 1.375), Point2D(1.4375, 1.4375), Point2D(1.5, 1.5), Point2D(1.375, 1.4375), Point2D(1.375, 1.625), Point2D(1.375, 1.375), Point2D(1.375, 1.5), Point2D(1.25, 1.4375), Point2D(1.125, 1.25), Point2D(1.125, 1.375), Point2D(1.1875, 1.375), Point2D(1.1875, 1.5), Point2D(1.1875, 1.1875), Point2D(1.4375, 1.25), Point2D(1.5, 1.1875), Point2D(1.25, 1.25), Point2D(1.5625, 1.0625), Point2D(1.5, 1.0), Point2D(1.375, 1.1875), Point2D(1.625, 1.25), Point2D(1.5625, 1.25), Point2D(1.625, 1.375), Point2D(1.5625, 1.4375), Point2D(1.625, 1.5), Point2D(1.9375, 1.4375), Point2D(1.75, 1.4375), Point2D(1.625, 1.4375), Point2D(1.875, 1.4375), Point2D(1.875, 1.375), Point2D(1.8125, 1.375), Point2D(1.625, 1.0625), Point2D(1.6875, 1.1875), Point2D(1.75, 1.25), Point2D(1.75, 1.0625)]

@testset "Scale all points" begin
    temp_sptsn = map(p -> scaled_point(p, scaler), usptsn)
    uptsn = map(p -> unscaled_point(p, scaler), temp_sptsn)
    temp2_sptsn = map(p -> scaled_point(p, scaler), uptsn)
    for (index, value) in enumerate(uptsn)
        @test value == usptsn[index]
    end
end
